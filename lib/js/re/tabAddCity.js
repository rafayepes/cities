// Generated by BUCKLESCRIPT VERSION 1.9.1, PLEASE EDIT WITH CARE
'use strict';

var Block         = require("bs-platform/lib/js/block.js");
var Curry         = require("bs-platform/lib/js/curry.js");
var ImageRe       = require("bs-react-native/lib/js/src/components/imageRe.js");
var StyleRe       = require("bs-react-native/lib/js/src/styleRe.js");
var ReactNative   = require("bs-react-native/lib/js/src/reactNative.js");
var ReasonReact   = require("reason-react/lib/js/src/reasonReact.js");
var TextInputRe   = require("bs-react-native/lib/js/src/components/textInputRe.js");
var DimensionsRe  = require("bs-react-native/lib/js/src/dimensionsRe.js");
var StyleSheetRe  = require("bs-react-native/lib/js/src/styleSheetRe.js");
var ButtonElement = require("./buttonElement.js");

var windowWidth = DimensionsRe.get(/* window */-762539024).width;

var styles = StyleSheetRe.create({
      container: StyleRe.style(/* :: */[
            StyleRe.flex(1),
            /* :: */[
              StyleRe.backgroundColor("#9C27B0"),
              /* [] */0
            ]
          ]),
      logo: StyleRe.style(/* :: */[
            StyleRe.maxHeight(36),
            /* :: */[
              StyleRe.maxWidth(windowWidth),
              /* :: */[
                StyleRe.marginTop(100),
                /* :: */[
                  StyleRe.alignItems(/* center */98248149),
                  /* [] */0
                ]
              ]
            ]
          ]),
      textInput: StyleRe.style(/* :: */[
            StyleRe.height(55),
            /* :: */[
              StyleRe.backgroundColor("white"),
              /* :: */[
                StyleRe.marginHorizontal(15),
                /* :: */[
                  StyleRe.marginTop(8),
                  /* :: */[
                    StyleRe.padding(9),
                    /* [] */0
                  ]
                ]
              ]
            ]
          ])
    });

function setNameRef(theRef, param) {
  param[/* state */4][/* nameRef */1][0] = theRef === null ? /* None */0 : [theRef];
  return /* () */0;
}

var component = ReasonReact.reducerComponentWithRetainedProps("TabAddCity");

function make(dispatchAddCity, dispatchUpdateAsyncStorage, _) {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (self) {
      return ReasonReact.element(/* None */0, /* None */0, Curry.app(ReactNative.View[/* make */0], [
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* Some */[styles.container],
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* None */0,
                      /* array */[
                        ReasonReact.element(/* None */0, /* None */0, ImageRe.Image[/* make */3](/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* contain */427065300], /* Some */[/* Required */Block.__(1, [require("../../../app/assets/citieslogo.png")])], /* Some */[styles.logo], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[])),
                        ReasonReact.element(/* None */0, /* Some */[Curry._1(self[/* handle */0], setNameRef)], TextInputRe.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.textInput], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* false */0], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[Curry._1(self[/* reduce */3], (function (value) {
                                            return /* ChangeCity */Block.__(0, [value]);
                                          }))], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["City name"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[self[/* state */4][/* input */0][/* name */0]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["transparent"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[])),
                        ReasonReact.element(/* None */0, /* None */0, TextInputRe.make(/* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[styles.textInput], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[/* false */0], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[Curry._1(self[/* reduce */3], (function (value) {
                                            return /* ChangeCountry */Block.__(1, [value]);
                                          }))], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["Country name"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */[self[/* state */4][/* input */0][/* country */1]], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* Some */["transparent"], /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0, /* None */0)(/* array */[])),
                        ReasonReact.element(/* None */0, /* None */0, ButtonElement.make({
                                  marginTop: 8
                                }, "Submit", "#8e8e8e", Curry._1(self[/* reduce */3], (function () {
                                        return /* Submit */0;
                                      })), /* array */[]))
                      ]
                    ]));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* input : record */[
                /* name */"",
                /* country */""
              ],
              /* nameRef */[/* None */0]
            ];
    });
  newrecord[/* retainedProps */11] = /* record */[
    /* dispatchAddCity */dispatchAddCity,
    /* dispatchUpdateAsyncStorage */dispatchUpdateAsyncStorage
  ];
  newrecord[/* reducer */12] = (function (action, state) {
      if (typeof action === "number") {
        var input = state[/* input */0];
        var match = input[/* name */0];
        var match$1 = input[/* country */1];
        var exit = 0;
        if (match === "") {
          if (match$1 === "") {
            return /* NoUpdate */0;
          } else {
            exit = 1;
          }
        } else {
          exit = 1;
        }
        if (exit === 1) {
          return /* UpdateWithSideEffects */Block.__(3, [
                    /* record */[
                      /* input : record */[
                        /* name */"",
                        /* country */""
                      ],
                      /* nameRef */state[/* nameRef */1]
                    ],
                    (function (self) {
                        Curry._1(self[/* retainedProps */5][/* dispatchAddCity */0], {
                              name: match,
                              country: match$1
                            });
                        Curry._1(self[/* retainedProps */5][/* dispatchUpdateAsyncStorage */1], /* () */0);
                        return /* () */0;
                      })
                  ]);
        }
        
      } else if (action.tag) {
        var init = state[/* input */0];
        return /* Update */Block.__(0, [/* record */[
                    /* input : record */[
                      /* name */init[/* name */0],
                      /* country */action[0]
                    ],
                    /* nameRef */state[/* nameRef */1]
                  ]]);
      } else {
        var init$1 = state[/* input */0];
        return /* Update */Block.__(0, [/* record */[
                    /* input : record */[
                      /* name */action[0],
                      /* country */init$1[/* country */1]
                    ],
                    /* nameRef */state[/* nameRef */1]
                  ]]);
      }
    });
  return newrecord;
}

var tabAddCity = ReasonReact.wrapReasonForJs(component, (function (jsProps) {
        return make(jsProps.dispatchAddCity, jsProps.dispatchUpdateAsyncStorage, /* array */[]);
      }));

exports.windowWidth = windowWidth;
exports.styles      = styles;
exports.setNameRef  = setNameRef;
exports.component   = component;
exports.make        = make;
exports.tabAddCity  = tabAddCity;
/* windowWidth Not a pure module */
